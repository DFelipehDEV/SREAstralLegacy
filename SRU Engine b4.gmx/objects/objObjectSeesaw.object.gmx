<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprObjectSeesaw</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objPlatform</parentName>
  <maskName>sprObjectSeesawMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    LeftObject    = noone;
    RightObject   = noone;
    Height        = -5;
    MaxHeight     = -16;
    if collision_rectangle(bbox_left, y-30, x-10, y, objObjectSpikeball, true, true)
        BallSide      = -1;
    else if collision_rectangle(x+10, y-30, bbox_right, y, objObjectSpikeball, true, true)
        BallSide      = 1;
    else 
        BallSide = 0;
    image_speed   = 0;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    

    if(BallSide == -1){
        TempObject = collision_rectangle(bbox_left-2, y-30, x-10, y, objObjectSpikeball, false, true);
        if(TempObject != noone){
            if(TempObject.ground == true &amp;&amp; LeftObject != TempObject){
                LeftObject = TempObject;
                LeftObject.x = x-32;
                if(RightObject != noone){
                    RightObject.y_speed = Height/max((bbox_right-(RightObject.x))/16, 1); 
                    RightObject.x_speed  = 0; 
                    RightObject.ground  = false; 
                    RightObject.action  = action_spring_jump;
                    RightObject         = noone;  
                    
                    audio_play_sou(sndSpring,global.sfxvolume,1.1,false,0)                  
                }      
            }
        }else
            LeftObject = noone;
    }
    if(BallSide == 1){    
        TempObject = collision_rectangle(x+10, y-30, bbox_right, y, objObjectSpikeball, false, true);
        if(TempObject != noone){
            if(TempObject.ground == true &amp;&amp; RightObject != TempObject){
                RightObject     = TempObject;
                RightObject.x   = x+32;
                if(LeftObject != noone){
                    LeftObject.y_speed = Height/max(((LeftObject.x)-bbox_left)/16, 1); 
                    LeftObject.x_speed   = 0; 
                    LeftObject.ground  = false; 
                    LeftObject.action  = action_spring_jump;
                    LeftObject         = noone; 

                    audio_play_sou(sndSpring,global.sfxvolume,1.1,false,0)                  
                }
            }
        }else
            RightObject = noone;
    }


   if(RightObject == noone || RightObject.id ==  objSonic){
        TempObject = collision_rectangle(x+10, y-40, bbox_right, y,  objSonic, true, true);
        if(TempObject != noone &amp;&amp; TempObject != RightObject &amp;&amp; TempObject != LeftObject){            
            if(TempObject.TerrainId == id &amp;&amp; TempObject.ground == true){
                RightObject = TempObject;
                RightObject.angle = 0;
                if(LeftObject != noone){
                    Height = -10;
                    LeftObject.y_speed = Height;
                    LeftObject.ground  = false;  
                    LeftObject.x_speed   = 64/((abs(Height)*2)/0.2);    
                    BallSide           = 1;              
                    LeftObject         = noone;                  
                }
            }
        }else if(TempObject == noone)
            RightObject = noone;
        else
            TempObject.angle = 0;
    }
    
    if(LeftObject == noone || LeftObject.id == objSonic){
        TempObject = collision_rectangle(bbox_left-2, y-40, x-10, y,objSonic, true, true);
        if(TempObject != noone &amp;&amp; TempObject != LeftObject &amp;&amp; TempObject != RightObject){
            
            if(TempObject.TerrainId == id &amp;&amp; TempObject.ground == true){
                LeftObject = TempObject;
                LeftObject.angle = 0;
                if(RightObject != noone){
                    Height               = -10;
                    RightObject.y_speed  = Height;
                    RightObject.ground   = false;  
                    RightObject.x_speed    = 64/((Height*2)/0.2);    
                    BallSide             = -1;              
                    RightObject          = noone;                              
                }
            }
        }else if(TempObject == noone)
            LeftObject = noone;
        else
            TempObject.angle = 0;
    }
    

    if(LeftObject != noone &amp;&amp; RightObject == noone &amp;&amp; image_index &gt; 0){
        image_index -= 0.2; 
        with(LeftObject){
            repeat(7){
                if(place_meeting(x, y+1, other.id) == false)
                    y += 1;
            }
        }        
    }else if(LeftObject == noone &amp;&amp; RightObject == noone){
        if(image_index &lt; 1)
            image_index += 0.2; 
        if(image_index &gt; 1)
            image_index -= 0.2; 
    }else if(LeftObject == noone &amp;&amp; RightObject != noone &amp;&amp; image_index &lt; 2){
        image_index += 0.2; 
        with(RightObject){
            repeat(7){
                if(place_meeting(x, y+1, other.id) == false)
                    y += 1;
            }
        }    
    } 
    Player = objSonic   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
